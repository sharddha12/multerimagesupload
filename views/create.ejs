<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
    * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {   
    
    background-repeat: no-repeat;
    height: 100vh;
    background-size: cover;
    background-position: center;
    display: flex;
    flex-direction: column;
    justify-content: center;
    font-family: sans-serif;
    color: white;
}

.container {
    width: 90%;
    max-width: 550px;
    height: auto;
    padding: 25px;
    background-color: black;
    opacity: 0.5;
    margin: auto;
    border: 3px solid black;
    border-radius: 20px;
}

#signup {
    padding: 20px;
    font-size: 2rem;
    text-align: center;
    margin: 15px 0;
}

.form-group {
    display: flex;
    flex-direction: column;
    align-items: center;
}

form input {
    padding: 12px;
    width: 80%;
    margin: 0 auto 25px;
    display: block;
    border: none;
    border-radius: 20px;
    background-color: #f2f2f2;
    font-size: 1rem;
}

.button {
    display: flex;
    justify-content: center;
    margin: 20px 0;
}

.button button {
    padding: 12px 25px;
    background-color: #f2f2f2;
    border: none;
    border-radius: 20px;
    font-size: 1rem;
    cursor: pointer;
    width: auto;
    min-width: 120px;
    font-weight: bold;
    transition: all 0.3s ease;
}

.button button:hover {
    background-color: #e6e6e6;
}

form p {
    font-size: 0.9rem;
    color: #f2f2f2;
    text-align: center;
    padding-bottom: 15px;
}

form a {
    text-decoration: none;
    color: #f2f2f2;
    transition: color 0.3s ease;
}

form a:hover {
    color: #cccccc;
}

form label {
    display: block;
    font-size: 0.9rem;
    color: #f2f2f2;
    font-weight: bold;
    margin-bottom: 8px;
    text-align: center;
}

/* Responsive Design */
@media (max-width: 768px) {
    #signup {
        font-size: 1.8rem;
        padding: 15px 0;
    }
    
    .container {
        width: 85%;
        padding: 15px;
    }
    
    form input {
        width: 90%;
        font-size: 0.9rem;
        padding: 10px;
    }
    
    .button button {
        padding: 10px 20px;
        font-size: 0.9rem;
    }
}

@media (max-width: 480px) {
    #signup {
        font-size: 1.5rem;
        margin: 10px 0;
    }
    
    .container {
        width: 95%;
        padding: 10px;
    }
    
    form input {
        width: 95%;
        margin-bottom: 20px;
        font-size: 0.85rem;
    }
    
    form p {
        font-size: 0.8rem;
    }
    
    .button button {
        min-width: 100px;
        padding: 8px 15px;
    }
    
    form label {
        font-size: 0.8rem;
    }
}
   
</style>
</head>

<body>
    <div class="container">
        <h1 id="signup">Sign Up</h1>
        <form action="/createuser" method="POST">
            <div class="form-group">
               
                <input type="email" name="email" placeholder="Email Address" required>
                <input type="password" name="password" placeholder="Password" required>
               
            </div>
            <div class="button">
                <button type="submit">Create Account</button>
            </div>
            <p>Already have an account? <a href="#">Login here</a></p>
        </form>
    </div>

    <script>

const form = document.querySelector('form');
const emailInput = document.querySelector('input[type="email"]');
const passwordInput = document.querySelector('input[type="password"]');
const submitButton = document.querySelector('button[type="submit"]');

form.addEventListener('submit', async (event) => {
    event.preventDefault();
    submitButton.disabled = true;
    submitButton.textContent = 'Creating Account...';

    try {
        const response = await fetch("/api/user/createuser", {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                email: emailInput.value,
                password: passwordInput.value
            })
        });

        const data = await response.json();
        
        if (!response.ok) {
            throw new Error(data.message || 'User creation failed');
        }

        alert('User created successfully');
        window.location.href = '/home';
    } catch (error) {
        console.error('Error:', error);
        alert(error.message || 'An error occurred while creating the user.');
    } finally {
        submitButton.disabled = false;
        submitButton.textContent = 'Create Account';
        form.reset();
    }
});  
                
    </script>
    
</body>
</html>